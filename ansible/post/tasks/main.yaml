---
- name: Instalar pacotes via pip3
  ansible.builtin.pip:
    name:
      - kubernetes>=12.0.0
      - PyYAML>=3.11
      - jsonpatch
    executable: pip3

- name: Add longhorn chart repo
  kubernetes.core.helm_repository:
    name: longhorn
    repo_url: "https://charts.longhorn.io"
    kubeconfig: ../../kubeconfig

- name: Separately update the repository cache
  kubernetes.core.helm:
    name: dummy
    namespace: kube-system
    state: absent
    update_repo_cache: true
    kubeconfig: ../../kubeconfig

- name: Deploy longhorn
  kubernetes.core.helm:
    name: longhorn
    chart_ref: longhorn/longhorn
    release_namespace: longhorn-system
    create_namespace: true
    kubeconfig: ../../kubeconfig

- name: Patch storageclass local-path
  kubernetes.core.k8s:
    kubeconfig: ../../kubeconfig
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: local-path
    merge_type:
      - merge
    definition:
      metadata:
        annotations:
          storageclass.kubernetes.io/is-default-class: "false"

- name: Check if longhorn StorageClass exists
  kubernetes.core.k8s_info:
    kubeconfig: ../../kubeconfig
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: longhorn
  retries: 30
  delay: 10

- name: Patch storageclass longhorn
  kubernetes.core.k8s:
    kubeconfig: ../../kubeconfig
    api_version: storage.k8s.io/v1
    kind: StorageClass
    name: longhorn
    merge_type:
      - merge
    definition:
      metadata:
        annotations:
          storageclass.kubernetes.io/is-default-class: "true"

- name: Force rollout for coredns
  kubernetes.core.k8s:
    kubeconfig: ../../kubeconfig
    api_version: apps/v1
    kind: Deployment
    namespace: kube-system
    name: coredns
    definition:
      metadata:
        annotations:
          kubectl.kubernetes.io/restartedAt: "{{ lookup('pipe', 'date --iso-8601=seconds') }}"
